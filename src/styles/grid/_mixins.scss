@import '../abstracts/variables';
@import '../abstracts/flex';
@import './functions';

@mixin make-row($gutter: $grid-gutter-width) {
    --#{$variable-prefix}gutter-x: #{$gutter};
    --#{$variable-prefix}gutter-y: 0;
    @include flexBox();
    @include flexWrap(wrap);
    margin-top: calc(var(--#{$variable-prefix}gutter-y) * -1);
    margin-right: calc(var(--#{$variable-prefix}gutter-x) / -2);
    margin-left: calc(var(--#{$variable-prefix}gutter-x) / -2);
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
    box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
    flex-shrink: 0;
    width: 100%;
    max-width: 100%;
    padding-right: calc(var(--#{$variable-prefix}gutter-x) / 2);
    padding-left: calc(var(--#{$variable-prefix}gutter-x) / 2);
    margin-top: var(--#{$variable-prefix}gutter-y);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin row-cols($count) {
    > * {
        flex: 0 0 auto;
        width: 100% / $count;
    }
}

@mixin make-col-auto() {
    flex: 0 0 auto;
    width: auto;
}

@mixin make-col($size, $columns: $grid-columns) {
    flex: 0 0 auto;
    width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
    $num: $size / $columns;
    margin-left: if($num == 0, 0, percentage($num));
}

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);
  
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            .arzooo-col#{$infix} {
                flex: 1 0 0%;
            }
  
            .row-arzooo-cols#{$infix}-auto > * {
                @include make-col-auto();
            }
  
            @if $grid-row-columns > 0 {
                @for $i from 1 through $grid-row-columns {
                    .row-arzooo-cols#{$infix}-#{$i} {
                        @include row-cols($i);
                    }
                }
            }
  
            .arzooo-col#{$infix}-auto {
                @include make-col-auto();
            }
  
            @if $columns > 0 {
                @for $i from 1 through $columns {
                    .arzooo-col#{$infix}-#{$i} {
                        @include make-col($i, $columns);
                    }
                }
  
                @for $i from 0 through ($columns - 1) {
                    @if not ($infix == "" and $i == 0) {
                        .offset#{$infix}-#{$i} {
                            @include make-col-offset($i, $columns);
                        }
                    }
                }
            }
  
            @each $key, $value in $gutters {
                .g#{$infix}-#{$key},
                .gx#{$infix}-#{$key} {
                    --#{$variable-prefix}gutter-x: #{$value};
                }
        
                .g#{$infix}-#{$key},
                .gy#{$infix}-#{$key} {
                    --#{$variable-prefix}gutter-y: #{$value};
                }
            }
        }
    }
}
